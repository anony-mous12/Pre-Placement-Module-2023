class Solution {
public:
	bool search(int i, int j, int n, int m, int k, string word, vector<vector<char>>& board)
	{
		if(word.size() == k)   return true;
		if(i<0 || j<0 || i>=n || j>=m || board[i][j]!=word[k])  return false;
		char ch = board[i][j];
		board[i][j] = '$';
		bool left = search(i,j-1,n,m,k+1,word,board);
		bool down = search(i+1,j,n,m,k+1,word,board);
		bool right = search(i,j+1,n,m,k+1,word,board);
		bool up = search(i-1,j,n,m,k+1,word,board);
		board[i][j] = ch;
		return left || right || up || down;
	}
	bool exist(vector<vector<char>>& board, string word) {
		int n=board.size(),m=board[0].size();
		for(int i=0;i<n;i++)
			for(int j=0;j<m;j++)
				if(board[i][j]==word[0] && search(i,j,n,m,0,word,board))   
					return true;
		return false;
	}
};