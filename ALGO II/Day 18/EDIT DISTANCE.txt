class Solution {
public:
        int f(int i,int j,string word1, string word2,vector<vector<int>>&dp){
        if(i<0) return j+1;
        if(j<0) return i+1;
        if(dp[i][j]!=-1) return dp[i][j];
        int t=INT_MAX/2,deletee=INT_MAX/2,replace=INT_MAX/2,insert=INT_MAX/2;
        if(word1[i]==word2[j])
            t=f(i-1,j-1,word1,word2,dp);
        deletee=1+f(i-1,j,word1,word2,dp);
        replace=1+f(i-1,j-1,word1,word2,dp);
        insert=1+f(i,j-1,word1,word2,dp);
        return dp[i][j]=min(t,min(deletee,min(replace,insert)));
    }
    int minDistance(string word1, string word2) {
        vector<vector<int>>dp(word1.length()+1,vector<int>(word2.length()+1,-1));
        return f(word1.length()-1,word2.length()-1,word1,word2,dp);
    
    }
};