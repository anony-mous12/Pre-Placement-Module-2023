class Solution {
public:
    
        vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> result;
        dfs(0,nums,result);
        return result;
    }
    
     void dfs(int pos,vector<int>& nums,vector<vector<int>> & result){
        if(pos==nums.size()){
            result.push_back(nums);
        }
        else{
            unordered_set<int> st;

            for(int i=pos; i< nums.size(); i++){
                if (st.count(nums[i]) == 1)
                { continue; }
                st.insert(nums[i]);
                swap(nums[pos], nums[i]);
                dfs(pos+1,nums,result);
                swap(nums[pos], nums[i]);  
            }  
        } 
     }
};