class Solution {
public:
    map<int, vector<int>> levelOrderTraversal(TreeNode* root){
        map<int, vector<int>> levels;
        queue<pair<TreeNode*, int>> q;
        q.push(make_pair(root, 0));
        TreeNode* curr;
        int level;
        while(!q.empty()){
            auto obj = q.front();
            q.pop();
            curr = obj.first;
            level = obj.second;
            levels[level].push_back(curr->val);
            if(curr->left) q.push(make_pair(curr->left, level+1));
            if(curr->right) q.push(make_pair(curr->right, level+1));
        }
        return levels;
    }
    
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root) return {}; 
        vector<vector<int>> result;
        map<int, vector<int>> levels = levelOrderTraversal(root);
        for(int i = 0; i < levels.size(); i++){
            if(i%2) reverse(levels[i].begin(), levels[i].end());
            result.push_back(levels[i]);
        }
        return result;
    }
};